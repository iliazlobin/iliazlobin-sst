// import MyButton from '@/components/mybutton'
// import {
//   DynamoDBClient,
//   GetItemCommand,
//   PutItemCommand,
// } from '@aws-sdk/client-dynamodb'
// import { listPages } from '@iliazlobin/storage/notion/dynamodb'
import '@/styles/mdx.css'

// import { MDXRemote, MDXRemoteSerializeResult } from 'next-mdx-remote'
import { serialize } from 'next-mdx-remote/serialize'
import { MDXRemote, MDXRemoteSerializeResult } from 'next-mdx-remote/rsc'

export default function TestPage({ params }: Props) {
  const source = 'Some **mdx** text, with a component \n\n#Hi \n\n\n##Hi'
  return (
    <div className="wrapper">
      {/* <MDXRemote {...source} components={components} /> */}
      <MDXRemote source={source} />
    </div>
  )
}

interface Props {
  params: {
    // source: MDXRemoteSerializeResult
    source: string
  }
}

// export async function getStaticProps() {
//   // MDX text - can be from a local file, database, anywhere
//   const source = 'Some **mdx** text, with a component <Test />'
//   const mdxSource = await serialize(source)
//   return { props: { source: mdxSource } }
// }

export async function generateStaticParams() {
  const source = 'Some **mdx** text, with a component'
  // const mdxSource = await serialize(source)
  return [{ props: { source: source } }]
}

// export default async function BlogPage({ params }: Props) {
//   const slug = params.slug.join('/')
//   const post = await retrieveWebPost({ slug })

//   if (!post) {
//     notFound()
//   }

//   const contentMd = post.contentMd || ''
//   const mdxObject = await compile(contentMd, { remarkPlugins: [remarkGfm] })
//   // const mdxCode = mdxObject.value as string

//   const mdxSource = await serialize(contentMd)

//   return (
//     <main className="container grid lg:grid-cols-[320px_auto] xl:grid-cols-[320px_auto_280px] gap-4 p-0">
//       <div className="hidden lg:block shrink-0 p-4">
//         <div className="sticky top-20 ">
//           <Card className="mb-4">
//             <CardHeader>
//               <CardTitle>Authors</CardTitle>
//             </CardHeader>
//             <CardContent className="grid gap-6">
//               <div className="flex items-center justify-between space-x-4">
//                 <Button
//                   variant="ghost"
//                   className="w-full justify-start text-left"
//                 >
//                   <div className="flex items-center space-x-4">
//                     <Avatar className="h-8 w-8">
//                       <AvatarImage src="/avatars/02.png" alt="Image" />
//                       <AvatarFallback>IZ</AvatarFallback>
//                     </Avatar>
//                     <div>
//                       <p className="text-sm font-medium leading-none">
//                         Ilia Zlobin
//                       </p>
//                       <p className="text-sm text-muted-foreground">
//                         Cloud Architect
//                       </p>
//                     </div>
//                   </div>
//                 </Button>
//               </div>
//             </CardContent>
//           </Card>
//           <Card className="mb-4">
//             <CardHeader>
//               <CardTitle>Tags</CardTitle>
//             </CardHeader>
//             <CardContent>
//               {/* {tags.map(tag => (
//                 <div key={tag}>
//                   <Tag text={tag} />
//                 </div>
//               ))} */}
//             </CardContent>
//           </Card>
//         </div>
//       </div>
//       <div className="mx-auto lg:mx-0 w-full min-w-0 max-w-3xl p-4">
//         <h1 className={'text-6xl font-bold text-center'}>{post.title}</h1>
//         {post.createdTime && (
//           <div className="text-base font-medium leading-6 text-gray-500 dark:text-gray-400 text-center mb-4">
//             <time dateTime={post.createdTime}>
//               {new Date(post.createdTime).toLocaleDateString('en-US', {
//                 weekday: 'long',
//                 year: 'numeric',
//                 month: 'long',
//                 day: 'numeric',
//               })}
//             </time>
//           </div>
//         )}
//         <div className="flex justify-center mb-4">
//           {/* <Image
//             src={post.coverImage.path}
//             alt={post.title}
//             width={post.coverImage.height}
//             height={post.coverImage.width}
//           /> */}
//         </div>

//         {/* <Mdx code={mdxCode} /> */}
//         {/* <MDXRemote {...mdxSource} /> */}
//       </div>
//       <div className="hidden xl:block shrink-0 p-4">
//         <div className="sticky top-20 text-sm">
//           <Card className="mb-4">
//             {/* <CardHeader>
//               <CardTitle className="text-xl">Table of Content</CardTitle>
//             </CardHeader> */}
//             <CardContent className="grid">
//               {/* <MyButton></MyButton> */}
//               {/* <DashboardTableOfContents toc={toc} /> */}
//             </CardContent>
//           </Card>
//         </div>
//       </div>
//     </main>
//   )
// }
